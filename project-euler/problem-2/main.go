// Project Euler Problem 2 - Even Fibonacci Numbers
//
// Each new term in the Fibonacci sequence is generated by adding the previous
// two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89
//
// By considering the terms in the Fibonacci sequence whose values do not
// exceed four million, find the sum of the even-valued terms.

package main

import "fmt"

func fibonacci(num1 int, num2 int) int {
	return num1 + num2
}

func solution(maximumTerm int) int {
	previousTerm1, previousTerm2 := 1, 1
	total := 0

	for previousTerm2 < maximumTerm {
		fibonacciPoint := fibonacci(previousTerm1, previousTerm2)

		previousTerm1, previousTerm2 = previousTerm2, fibonacciPoint

		if fibonacciPoint%2 == 0 {
			total += fibonacciPoint
		}
	}

	return total
}

func main() {
	result := solution(4000000)
	fmt.Printf("main() = %d", result)
}
